{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANMEET KAUR\\\\Desktop\\\\tour-management\\\\frontend\\\\src\\\\pages\\\\MemoryForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/memory-form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoryForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    user: \"placeholder_user_id\" // Replace with actual user ID\n  });\n\n  const [images, setImages] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"title\", formData.title);\n    data.append(\"description\", formData.description);\n    data.append(\"user\", formData.user);\n    images.forEach(image => data.append(\"images\", image));\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/memories\", data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(response.data.message);\n    } catch (error) {\n      console.error(\"Error uploading memory:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Share Your Travel Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: formData.title,\n        onChange: e => setFormData({\n          ...formData,\n          title: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: formData.description,\n        onChange: e => setFormData({\n          ...formData,\n          description: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: e => setImages([...e.target.files]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryForm, \"sAigrPk7DDbs5TuvifbTaM58vNk=\");\n_c = MemoryForm;\nexport default MemoryForm;\nvar _c;\n$RefreshReg$(_c, \"MemoryForm\");","map":{"version":3,"names":["React","useState","axios","MemoryForm","formData","setFormData","title","description","user","images","setImages","handleSubmit","e","preventDefault","data","FormData","append","forEach","image","response","post","headers","alert","message","error","console","target","value","files"],"sources":["C:/Users/MANMEET KAUR/Desktop/tour-management/frontend/src/pages/MemoryForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/memory-form.css\";\n\nconst MemoryForm = () => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    user: \"placeholder_user_id\", // Replace with actual user ID\n  });\n  const [images, setImages] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"title\", formData.title);\n    data.append(\"description\", formData.description);\n    data.append(\"user\", formData.user);\n    images.forEach((image) => data.append(\"images\", image));\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/memories\", data, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      alert(response.data.message);\n    } catch (error) {\n      console.error(\"Error uploading memory:\", error);\n    }\n  };\n\n  return (\n    <div className=\"memory-form\">\n      <h1>Share Your Travel Memory</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={formData.title}\n          onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n          required\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={formData.description}\n          onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n          required\n        />\n        <input\n          type=\"file\"\n          multiple\n          onChange={(e) => setImages([...e.target.files])}\n          required\n        />\n        <button type=\"submit\">Submit Memory</button>\n      </form>\n    </div>\n  );\n};\n\nexport default MemoryForm;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAAC;AAEnC,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IACvCK,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,qBAAqB,CAAE;EAC/B,CAAC,CAAC;;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3BD,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEZ,QAAQ,CAACE,KAAK,CAAC;IACpCQ,IAAI,CAACE,MAAM,CAAC,aAAa,EAAEZ,QAAQ,CAACG,WAAW,CAAC;IAChDO,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEZ,QAAQ,CAACI,IAAI,CAAC;IAClCC,MAAM,CAACQ,OAAO,CAAEC,KAAK,IAAKJ,IAAI,CAACE,MAAM,CAAC,QAAQ,EAAEE,KAAK,CAAC,CAAC;IAEvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,oCAAoC,EAAEN,IAAI,EAAE;QAC5EO,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFC,KAAK,CAACH,QAAQ,CAACL,IAAI,CAACS,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAA,UAAI;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAK,eACjC;MAAM,QAAQ,EAAEb,YAAa;MAAA,wBAC3B;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,OAAO;QACnB,KAAK,EAAEP,QAAQ,CAACE,KAAM;QACtB,QAAQ,EAAGM,CAAC,IAAKP,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,KAAK,EAAEM,CAAC,CAACc,MAAM,CAACC;QAAM,CAAC,CAAE;QACrE,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR,eACF;QACE,WAAW,EAAC,aAAa;QACzB,KAAK,EAAEvB,QAAQ,CAACG,WAAY;QAC5B,QAAQ,EAAGK,CAAC,IAAKP,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEG,WAAW,EAAEK,CAAC,CAACc,MAAM,CAACC;QAAM,CAAC,CAAE;QAC3E,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR,eACF;QACE,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,QAAQ,EAAGf,CAAC,IAAKF,SAAS,CAAC,CAAC,GAAGE,CAAC,CAACc,MAAM,CAACE,KAAK,CAAC,CAAE;QAChD,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACvC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GArDIzB,UAAU;AAAA,KAAVA,UAAU;AAuDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}