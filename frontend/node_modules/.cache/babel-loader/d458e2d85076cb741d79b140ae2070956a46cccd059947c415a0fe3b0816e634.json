{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANMEET KAUR\\\\Desktop\\\\tour-management\\\\frontend\\\\src\\\\pages\\\\MemoryForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoryForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    user: \"\",\n    title: \"\",\n    description: \"\"\n  });\n  const [images, setImages] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"user\", formData.user);\n    data.append(\"title\", formData.title);\n    data.append(\"description\", formData.description);\n    images.forEach(image => data.append(\"images\", image));\n    try {\n      await axios.post(\"http://localhost:5000/api/memories\", data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setIsSubmitted(true);\n    } catch (error) {\n      console.error(\"Error submitting memory:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Share Your Travel Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your Name\",\n        value: formData.user,\n        onChange: e => setFormData({\n          ...formData,\n          user: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Memory Title\",\n        value: formData.title,\n        onChange: e => setFormData({\n          ...formData,\n          title: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Memory Description\",\n        value: formData.description,\n        onChange: e => setFormData({\n          ...formData,\n          description: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: e => setImages([...e.target.files]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Memory uploaded successfully! \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/memories\",\n        children: \"View Community Memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 56\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryForm, \"dN/EpkC/PxRFfgNWbIe4sHMsJEo=\");\n_c = MemoryForm;\nexport default MemoryForm;\nvar _c;\n$RefreshReg$(_c, \"MemoryForm\");","map":{"version":3,"names":["React","useState","axios","MemoryForm","formData","setFormData","user","title","description","images","setImages","isSubmitted","setIsSubmitted","handleSubmit","e","preventDefault","data","FormData","append","forEach","image","post","headers","error","console","target","value","files"],"sources":["C:/Users/MANMEET KAUR/Desktop/tour-management/frontend/src/pages/MemoryForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst MemoryForm = () => {\n  const [formData, setFormData] = useState({\n    user: \"\",\n    title: \"\",\n    description: \"\",\n  });\n  const [images, setImages] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"user\", formData.user);\n    data.append(\"title\", formData.title);\n    data.append(\"description\", formData.description);\n    images.forEach((image) => data.append(\"images\", image));\n\n    try {\n      await axios.post(\"http://localhost:5000/api/memories\", data, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      setIsSubmitted(true);\n    } catch (error) {\n      console.error(\"Error submitting memory:\", error);\n    }\n  };\n\n  return (\n    <div className=\"memory-form\">\n      <h1>Share Your Travel Memory</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Your Name\"\n          value={formData.user}\n          onChange={(e) => setFormData({ ...formData, user: e.target.value })}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Memory Title\"\n          value={formData.title}\n          onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n          required\n        />\n        <textarea\n          placeholder=\"Memory Description\"\n          value={formData.description}\n          onChange={(e) =>\n            setFormData({ ...formData, description: e.target.value })\n          }\n          required\n        />\n        <input\n          type=\"file\"\n          multiple\n          onChange={(e) => setImages([...e.target.files])}\n          required\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {isSubmitted && <p>Memory uploaded successfully! <a href=\"/memories\">View Community Memories</a></p>}\n    </div>\n  );\n};\n\nexport default MemoryForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}