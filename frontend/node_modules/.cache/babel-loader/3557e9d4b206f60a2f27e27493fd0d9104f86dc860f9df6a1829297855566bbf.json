{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANMEET KAUR\\\\Desktop\\\\tour-management\\\\frontend\\\\src\\\\pages\\\\Blogs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/blogs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blogs = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    content: \"\",\n    author: \"placeholder_user_id\" // Replace with logged-in user's ID\n  });\n\n  const [image, setImage] = useState(null);\n\n  // Fetch blogs\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/blogs\").then(response => {\n      setBlogs(response.data);\n    });\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"title\", formData.title);\n    data.append(\"content\", formData.content);\n    data.append(\"author\", formData.author);\n    if (image) data.append(\"image\", image);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/blogs\", data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(response.data.message);\n      setBlogs([...blogs, response.data.blog]);\n    } catch (error) {\n      console.error(\"Error uploading blog:\", error);\n      alert(\"Error uploading blog.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"blog-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Blog Title\",\n        value: formData.title,\n        onChange: e => setFormData({\n          ...formData,\n          title: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Blog Content\",\n        value: formData.content,\n        onChange: e => setFormData({\n          ...formData,\n          content: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-list\",\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/blogs/${blog._id}`,\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"By: \", blog.author.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, blog._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Blogs, \"A1cvcL6UGopzPujgOV4PWkg8I5k=\");\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Blogs","blogs","setBlogs","formData","setFormData","title","content","author","image","setImage","get","then","response","data","handleSubmit","e","preventDefault","FormData","append","post","headers","alert","message","blog","error","console","target","value","files","map","_id","username"],"sources":["C:/Users/MANMEET KAUR/Desktop/tour-management/frontend/src/pages/Blogs.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/blogs.css\";\n\nconst Blogs = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    content: \"\",\n    author: \"placeholder_user_id\", // Replace with logged-in user's ID\n  });\n  const [image, setImage] = useState(null);\n\n  // Fetch blogs\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/blogs\").then((response) => {\n      setBlogs(response.data);\n    });\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"title\", formData.title);\n    data.append(\"content\", formData.content);\n    data.append(\"author\", formData.author);\n    if (image) data.append(\"image\", image);\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/blogs\", data, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      alert(response.data.message);\n      setBlogs([...blogs, response.data.blog]);\n    } catch (error) {\n      console.error(\"Error uploading blog:\", error);\n      alert(\"Error uploading blog.\");\n    }\n  };\n\n  return (\n    <div className=\"blogs\">\n      <h1>Blogs</h1>\n      <form onSubmit={handleSubmit} className=\"blog-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Blog Title\"\n          value={formData.title}\n          onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n          required\n        />\n        <textarea\n          placeholder=\"Blog Content\"\n          value={formData.content}\n          onChange={(e) => setFormData({ ...formData, content: e.target.value })}\n          required\n        />\n        <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} required />\n        <button type=\"submit\">Add Blog</button>\n      </form>\n      <div className=\"blog-list\">\n        {blogs.map((blog) => (\n          <div key={blog._id} className=\"blog-item\">\n            <h2>\n              <Link to={`/blogs/${blog._id}`}>{blog.title}</Link>\n            </h2>\n            <p>By: {blog.author.username}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Blogs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}